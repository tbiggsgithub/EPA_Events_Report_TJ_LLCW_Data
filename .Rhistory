flist2 = c("Figure_3.2_EventsReport_SSC_03012014.R",
"Figure_3.3_EventsReport_SSC_03012015.R",
"Figure_3.4_EventsReport_SSC_05152015.R",
"Figure_3.5_EventsReport_SSC_03062016.R",
"Figure_3.6_EventsReport_SSC_02172017.R",
"Figure_3.7_EventsReport_SSC_02272017.R")
###############################################################################################################
#Loop to run each R events script and pull out the appropriate tables: obs.summary.PT.IBWC and obs.summary
table.3.1.out = data.frame(matrix(nrow=1, ncol=4)) #empty dataframe to put the values in from obs.summary.PT.IBWC
names(table.3.1.out) <- c("Date", "SSC (g/L)", "Q (cms)", "Event")
table.3.3.out = data.frame(event.date= NA, total.q.mm=NA, total.q.m3=NA, VWM=NA, SSL.Event.VWM=NA,SSL.All.VWM=NA,SSL.Rating.no.bcf=NA,SSL.Rating.bcf=NA)
Storm.out = NA
for (i in 1:length(flist2)) {
source(paste(script.dir,flist2[i], sep = ""))
#append the obs.summary.PT.IBWC to the summary.out dataframe from each storm
table.3.1.out = rbind(table.3.1.out, table.3.1.export)
table.3.3.out = rbind(table.3.3.out, table.3.3.export) #only the usable data (A rating)
Storm.out = c(Storm.out, storm)
}
###############################################################################################################
#New summary tables
table.3.1.out$`Q (cms)`[table.3.1.out$`Q (cms)`<0.07] = 0.07
table.3.1 = table.3.1.out[2:length(table.3.1.out$Date),]
names(table.3.1) <- c("Date", "SSC (g/L)", "Q (cms)", "Event")
table.3.3 = table.3.3.out[2:length(table.3.3.out$event.date),]
Storm.out = Storm.out[2:length(Storm.out)]
###############################################################################################################
#Export new tables into .csv
fname.3.1 = "summary_table.3.1.csv"
write.csv(table.3.1, file=fname.3.1, row.names=F)
fname.3.3 = "summary_table.3.3.csv"
write.csv(table.3.3 , file=fname.3.3, row.names=F)
#To format the html table 3.1 in EPA Events Report
#Script written by Kris Taniguchi, SDSU (kristaniguchi@gmail.com)
#Table with SSC data summary
#Set working directory to the data folder, script directory will be used if sourcing functions
setwd("G:/mydocuments/SDSU/research/tijuana_watershed/writeups/EPA_events_report/EPA_Events_Report_TJ_LLCW_Scripts")
getwd() #the directory where the script is saved
source("print.htmlTable.R")
setwd('../EPA_Events_Report_TJ_LLCW_Data') #set working directory as the data folder, which is one folder back in it's own folder
###############################################################################################################
#Read in the tables generated from Table2.1_cal_generate.R and all of the events scripts
table.3.1.ssc = read.csv("summary_table.3.1.csv") #table with both IBWC and PT data
###############################################################################################################
#HTML Tables
library(htmlTable)
#Format html table for PT & IBWC data all
#Create dataframes, make sure all classes of numeric are set for rounding values
table.3.1.ssc.df = data.frame(table.3.1.ssc)
#Round the values
round1 = txtRound(table.3.1.ssc.df[,2:3],2) #round the numeric columns
table.3.1.final = data.frame(cbind(as.character(table.3.1.ssc.df[,1]), round1[,1], round1[,2]))
names(table.3.1.final) <- c("Date and Time", "SSC (g/L)", "Q (cms)")
#set the text columns as as.character
table.3.1.final[,1] <- as.character(table.3.1.ssc.df[,1])
table.3.1.final[,2] <- as.character(table.3.1.final[,2])
table.3.1.final[,3] <- as.character(table.3.1.final[,3])
#table.3.1.final[,4] <- as.character(table.3.1.ssc.df[,4])
table.3.1.SSC.tableout = htmlTable(table.3.1.final,
rnames = rep("", times=length(table.3.1.ssc.df[,1])), #no row names
header = c("Date", "SSC (g/L)", "Q (cms)"),
rgroup= c("Storm 1",  "Storm 2",  "Storm 3",  "Storm 6",  "Storm 9",  "Storm 10"),
n.rgroup=c(2,4,1,6,3,1),
caption="Table 3.1.  Suspended sediment concentration (SSC) for all collected samples.")
print.htmlTable(table.3.1.SSC.tableout)
table.3.3.ssc = read.csv("summary_table.3.3.csv") #table with both IBWC and PT data
table.3.3.ssc
table.3.3.ssc.df = data.frame(table.3.3.ssc)
round1 = txtRound(table.3.3.ssc.df[,c("total.q.mm","VWM")],1) #round the numeric columns
round1
?txtRound
table.3.3.ssc.df[,c("total.q.mm","VWM")] = round(table.3.3.ssc.df[,c("total.q.mm","VWM")],1) #round the numeric columns
table.3.3.ssc.df = data.frame(table.3.3.ssc)
table.3.3.ssc.df[,c("total.q.mm","VWM")] = round(table.3.3.ssc.df[,c("total.q.mm","VWM")],1) #round the numeric columns
table.3.3.ssc.df[,c("total.q.m3","SSL.Event.VWM","SSL.All.VWM","SSL.Rating.no.bcf","SSL.Rating.bcf")] = round(table.3.3.ssc.df[,c("total.q.m3","SSL.Event.VWM","SSL.All.VWM","SSL.Rating.no.bcf","SSL.Rating.bcf")],0)
table.3.3.ssc.df
table.3.3.ssc
table.3.3
table.3.3.out
setwd("G:/mydocuments/SDSU/research/tijuana_watershed/writeups/EPA_events_report/EPA_Events_Report_TJ_LLCW_Scripts")
getwd() #the directory where the script is saved
setwd('../EPA_Events_Report_TJ_LLCW_Data') #set working directory as the data folder, which is one folder back in it's own folder
script.dir= '../EPA_Events_Report_TJ_LLCW_Scripts/' #directory where scripts are saved
###############################################################################################################
#list all of the SSC scripts
flist2 = c("Figure_3.2_EventsReport_SSC_03012014.R",
"Figure_3.3_EventsReport_SSC_03012015.R",
"Figure_3.4_EventsReport_SSC_05152015.R",
"Figure_3.5_EventsReport_SSC_03062016.R",
"Figure_3.6_EventsReport_SSC_02172017.R",
"Figure_3.7_EventsReport_SSC_02272017.R")
###############################################################################################################
#Loop to run each R events script and pull out the appropriate tables: obs.summary.PT.IBWC and obs.summary
table.3.1.out = data.frame(matrix(nrow=1, ncol=4)) #empty dataframe to put the values in from obs.summary.PT.IBWC
names(table.3.1.out) <- c("Date", "SSC (g/L)", "Q (cms)", "Event")
table.3.3.out = data.frame(event.date= NA, NSCC=NA, total.q.mm=NA, total.q.m3=NA, VWM=NA, SSL.Event.VWM=NA,SSL.All.VWM=NA,SSL.Rating.no.bcf=NA,SSL.Rating.bcf=NA)
Storm.out = NA
for (i in 1:length(flist2)) {
source(paste(script.dir,flist2[i], sep = ""))
#append the obs.summary.PT.IBWC to the summary.out dataframe from each storm
table.3.1.out = rbind(table.3.1.out, table.3.1.export)
table.3.3.out = rbind(table.3.3.out, table.3.3.export) #only the usable data (A rating)
Storm.out = c(Storm.out, storm)
}
out.data
#To generate Table 3.1 and 3.3 in EPA Events Report
#Script written by Kris Taniguchi, SDSU (kristaniguchi@gmail.com)
#table generated from each SSC script, pull summary data from each script and put into table
#Set working directory to the data folder, script directory will be used if sourcing functions
setwd("G:/mydocuments/SDSU/research/tijuana_watershed/writeups/EPA_events_report/EPA_Events_Report_TJ_LLCW_Scripts")
getwd() #the directory where the script is saved
setwd('../EPA_Events_Report_TJ_LLCW_Data') #set working directory as the data folder, which is one folder back in it's own folder
script.dir= '../EPA_Events_Report_TJ_LLCW_Scripts/' #directory where scripts are saved
###############################################################################################################
#list all of the SSC scripts
flist2 = c("Figure_3.2_EventsReport_SSC_03012014.R",
"Figure_3.3_EventsReport_SSC_03012015.R",
"Figure_3.4_EventsReport_SSC_05152015.R",
"Figure_3.5_EventsReport_SSC_03062016.R",
"Figure_3.6_EventsReport_SSC_02172017.R",
"Figure_3.7_EventsReport_SSC_02272017.R")
###############################################################################################################
#Loop to run each R events script and pull out the appropriate tables: obs.summary.PT.IBWC and obs.summary
table.3.1.out = data.frame(matrix(nrow=1, ncol=4)) #empty dataframe to put the values in from obs.summary.PT.IBWC
names(table.3.1.out) <- c("Date", "SSC (g/L)", "Q (cms)", "Event")
table.3.3.out = data.frame(event.date= NA, NSCC=NA, total.q.mm=NA, total.q.m3=NA, VWM=NA, SSL.Event.VWM=NA,SSL.All.VWM=NA,SSL.Rating.no.bcf=NA,SSL.Rating.bcf=NA)
Storm.out = NA
for (i in 1:length(flist2)) {
source(paste(script.dir,flist2[i], sep = ""))
#append the obs.summary.PT.IBWC to the summary.out dataframe from each storm
table.3.1.out = rbind(table.3.1.out, table.3.1.export)
table.3.3.out = rbind(table.3.3.out, table.3.3.export) #only the usable data (A rating)
Storm.out = c(Storm.out, storm)
}
###############################################################################################################
#New summary tables
table.3.1.out$`Q (cms)`[table.3.1.out$`Q (cms)`<0.07] = 0.07
table.3.1 = table.3.1.out[2:length(table.3.1.out$Date),]
names(table.3.1) <- c("Date", "SSC (g/L)", "Q (cms)", "Event")
table.3.3 = table.3.3.out[2:length(table.3.3.out$event.date),]
Storm.out = Storm.out[2:length(Storm.out)]
###############################################################################################################
#Export new tables into .csv
fname.3.1 = "summary_table.3.1.csv"
write.csv(table.3.1, file=fname.3.1, row.names=F)
fname.3.3 = "summary_table.3.3.csv"
write.csv(table.3.3 , file=fname.3.3, row.names=F)
#To generate Table 3.1 and 3.3 in EPA Events Report
#Script written by Kris Taniguchi, SDSU (kristaniguchi@gmail.com)
#table generated from each SSC script, pull summary data from each script and put into table
#Set working directory to the data folder, script directory will be used if sourcing functions
setwd("G:/mydocuments/SDSU/research/tijuana_watershed/writeups/EPA_events_report/EPA_Events_Report_TJ_LLCW_Scripts")
getwd() #the directory where the script is saved
setwd('../EPA_Events_Report_TJ_LLCW_Data') #set working directory as the data folder, which is one folder back in it's own folder
script.dir= '../EPA_Events_Report_TJ_LLCW_Scripts/' #directory where scripts are saved
###############################################################################################################
#list all of the SSC scripts
flist2 = c("Figure_3.2_EventsReport_SSC_03012014.R",
"Figure_3.3_EventsReport_SSC_03012015.R",
"Figure_3.4_EventsReport_SSC_05152015.R",
"Figure_3.5_EventsReport_SSC_03062016.R",
"Figure_3.6_EventsReport_SSC_02172017.R",
"Figure_3.7_EventsReport_SSC_02272017.R")
###############################################################################################################
#Loop to run each R events script and pull out the appropriate tables: obs.summary.PT.IBWC and obs.summary
table.3.1.out = data.frame(matrix(nrow=1, ncol=4)) #empty dataframe to put the values in from obs.summary.PT.IBWC
names(table.3.1.out) <- c("Date", "SSC (g/L)", "Q (cms)", "Event")
table.3.3.out = data.frame(event.date= NA, NSSC=NA, total.q.mm=NA, total.q.m3=NA, VWM=NA, SSL.Event.VWM=NA,SSL.All.VWM=NA,SSL.Rating.no.bcf=NA,SSL.Rating.bcf=NA)
Storm.out = NA
for (i in 1:length(flist2)) {
source(paste(script.dir,flist2[i], sep = ""))
#append the obs.summary.PT.IBWC to the summary.out dataframe from each storm
table.3.1.out = rbind(table.3.1.out, table.3.1.export)
table.3.3.out = rbind(table.3.3.out, table.3.3.export) #only the usable data (A rating)
Storm.out = c(Storm.out, storm)
}
###############################################################################################################
#New summary tables
table.3.1.out$`Q (cms)`[table.3.1.out$`Q (cms)`<0.07] = 0.07
table.3.1 = table.3.1.out[2:length(table.3.1.out$Date),]
names(table.3.1) <- c("Date", "SSC (g/L)", "Q (cms)", "Event")
table.3.3 = table.3.3.out[2:length(table.3.3.out$event.date),]
Storm.out = Storm.out[2:length(Storm.out)]
###############################################################################################################
#Export new tables into .csv
fname.3.1 = "summary_table.3.1.csv"
write.csv(table.3.1, file=fname.3.1, row.names=F)
fname.3.3 = "summary_table.3.3.csv"
write.csv(table.3.3 , file=fname.3.3, row.names=F)
table.3.3
table.3.3.ssc = read.csv("summary_table.3.3.csv") #table with both IBWC and PT data
library(htmlTable)
table.3.3.ssc.df = data.frame(table.3.3.ssc)
table.3.3.ssc.df[,c("total.q.mm","VWM")] = round(table.3.3.ssc.df[,c("total.q.mm","VWM")],1) #round the numeric columns
table.3.3.ssc.df[,c("total.q.m3","SSL.Event.VWM","SSL.All.VWM","SSL.Rating.no.bcf","SSL.Rating.bcf")] = round(table.3.3.ssc.df[,c("total.q.m3","SSL.Event.VWM","SSL.All.VWM","SSL.Rating.no.bcf","SSL.Rating.bcf")],0)
table.3.3.final = data.frame(cbind(as.character(table.3.3.ssc.df[,1]), round1[,1], round2, round3, round1[,4], round1[,5]))
table.3.3.ssc.df
names(table.3.3.ssc.df) <- c("Event Date*", "N SSC", "mm", "m3", "VWM (g/L)", "Event VWM","All VWM","Rating, no bcf","Rating, bcf")
names(table.3.3.ssc.df) <- c("Event Date*", "N SSC", "mm", "m3", "g/L", "Event VWM","All VWM","Rating, no bcf","Rating, bcf")
table.3.3.SSC.tableout = htmlTable(table.3.3.final,
rnames = rep("", times=length(table.3.3.ssc.df[,1])), #no row names
cgroup = c("Event Date*", "Total Q","VWM", "Suspended sediment load"),
n.cgroup = c(1, 2, 1, 4),
caption="Table 3.3.  Total event suspended sediment load at the PT location for the events with SSC data. Drainage area is 10.23 km2 at the observation point.")
print(table.3.3.SSC.tableout)
#Create dataframes, make sure all classes of numeric are set for rounding values
table.3.3.ssc.df = data.frame(table.3.3.ssc)
#Round the values
table.3.3.ssc.df[,c("total.q.mm","VWM")] = round(table.3.3.ssc.df[,c("total.q.mm","VWM")],1) #round the numeric columns
table.3.3.ssc.df[,c("total.q.m3","SSL.Event.VWM","SSL.All.VWM","SSL.Rating.no.bcf","SSL.Rating.bcf")] = round(table.3.3.ssc.df[,c("total.q.m3","SSL.Event.VWM","SSL.All.VWM","SSL.Rating.no.bcf","SSL.Rating.bcf")],0)
#load.round = signif(table.3.3.ssc.df[,4], 3)
names(table.3.3.ssc.df) <- c("Event Date*", "N SSC", "mm", "m3", "g/L", "Event VWM","All VWM","Rating, no bcf","Rating, bcf")
table.3.3.SSC.tableout = htmlTable(table.3.3.ssc.df,
rnames = rep("", times=length(table.3.3.ssc.df[,1])), #no row names
cgroup = c("Event Date*", "Total Q","VWM", "Suspended sediment load"),
n.cgroup = c(1, 2, 1, 4),
caption="Table 3.3.  Total event suspended sediment load at the PT location for the events with SSC data. Drainage area is 10.23 km2 at the observation point.")
print(table.3.3.SSC.tableout)
table.3.3.ssc.df
#Format html table for PT & IBWC data all
#Create dataframes, make sure all classes of numeric are set for rounding values
table.3.3.ssc.df = data.frame(table.3.3.ssc)
#Round the values
table.3.3.ssc.df[,c("total.q.mm","VWM")] = round(table.3.3.ssc.df[,c("total.q.mm","VWM")],1) #round the numeric columns
table.3.3.ssc.df[,c("total.q.m3","SSL.Event.VWM","SSL.All.VWM","SSL.Rating.no.bcf","SSL.Rating.bcf")] = round(table.3.3.ssc.df[,c("total.q.m3","SSL.Event.VWM","SSL.All.VWM","SSL.Rating.no.bcf","SSL.Rating.bcf")],0)
#load.round = signif(table.3.3.ssc.df[,4], 3)
names(table.3.3.ssc.df) <- c("Event Date*", "", "mm", "m3", "g/L", "Event VWM","All VWM","Rating, no bcf","Rating, bcf")
table.3.3.SSC.tableout = htmlTable(table.3.3.ssc.df,
rnames = rep("", times=length(table.3.3.ssc.df[,1])), #no row names
cgroup = c("Event Date*", "N SSC","Total Q","VWM", "Suspended sediment load"),
n.cgroup = c(1, 2, 1, 4),
caption="Table 3.3.  Total event suspended sediment load at the PT location for the events with SSC data. Drainage area is 10.23 km2 at the observation point.")
print(table.3.3.SSC.tableout)
print.htmlTable(table.3.3.SSC.tableout)
table.3.3.ssc.df = data.frame(table.3.3.ssc)
#Round the values
table.3.3.ssc.df[,c("total.q.mm","VWM")] = round(table.3.3.ssc.df[,c("total.q.mm","VWM")],1) #round the numeric columns
table.3.3.ssc.df[,c("total.q.m3","SSL.Event.VWM","SSL.All.VWM","SSL.Rating.no.bcf","SSL.Rating.bcf")] = round(table.3.3.ssc.df[,c("total.q.m3","SSL.Event.VWM","SSL.All.VWM","SSL.Rating.no.bcf","SSL.Rating.bcf")],0)
#load.round = signif(table.3.3.ssc.df[,4], 3)
names(table.3.3.ssc.df) <- c("Event Date*", "", "mm", "m3", "g/L", "Event VWM","All VWM","Rating, no bcf","Rating, bcf")
table.3.3.SSC.tableout = htmlTable(table.3.3.ssc.df,
rnames = rep("", times=length(table.3.3.ssc.df[,1])), #no row names
cgroup = c("Event Date*", "N SSC","Total Q","VWM", "Suspended sediment load"),
n.cgroup = c(1, 1, 2, 4),
caption="Table 3.3.  Total event suspended sediment load at the PT location for the events with SSC data. Drainage area is 10.23 km2 at the observation point.")
print.htmlTable(table.3.3.SSC.tableout)
#Format html table for PT & IBWC data all
#Create dataframes, make sure all classes of numeric are set for rounding values
table.3.3.ssc.df = data.frame(table.3.3.ssc)
#Round the values
table.3.3.ssc.df[,c("total.q.mm","VWM")] = round(table.3.3.ssc.df[,c("total.q.mm","VWM")],1) #round the numeric columns
table.3.3.ssc.df[,c("total.q.m3","SSL.Event.VWM","SSL.All.VWM","SSL.Rating.no.bcf","SSL.Rating.bcf")] = round(table.3.3.ssc.df[,c("total.q.m3","SSL.Event.VWM","SSL.All.VWM","SSL.Rating.no.bcf","SSL.Rating.bcf")],0)
#load.round = signif(table.3.3.ssc.df[,4], 3)
names(table.3.3.ssc.df) <- c("Event Date*", "", "mm", "m3", "g/L", "Event VWM","All VWM","Rating, no bcf","Rating, bcf")
table.3.3.SSC.tableout = htmlTable(table.3.3.ssc.df,
rnames = rep("", times=length(table.3.3.ssc.df[,1])), #no row names
cgroup = c("Event Date*", "N SSC","Total Q","VWM", "Suspended sediment load"),
n.cgroup = c(1, 1, 2, 1,4),
caption="Table 3.3.  Total event suspended sediment load at the PT location for the events with SSC data. Drainage area is 10.23 km2 at the observation point.")
print.htmlTable(table.3.3.SSC.tableout)
setwd("G:/mydocuments/SDSU/research/tijuana_watershed/writeups/EPA_events_report/EPA_Events_Report_TJ_LLCW_Scripts")
getwd() #the directory where the script is saved
setwd('../EPA_Events_Report_TJ_LLCW_Data') #set working directory as the data folder, which is one folder back in it's own folder
###############################################################################################################
#Run the events report script for storm 10 (figure_2.20_storm10_IBWC_visual_2017_0227_KTedits05012017.R) to get the appropriate Q, stage, etc.
source("../EPA_Events_Report_TJ_LLCW_Scripts/figure_2.20_storm10_IBWC_visual_2017_0227_KTedits05012017.R")
#Dataframe q.data.all is the usable observed data (timeseries of all the good data)
names(data)
date.time = as.POSIXct(data$llc.date.time) #date.time from obs data
q.cms = as.numeric(as.character(data$Q.llc.0.013)) #q.data.all[,2] saved as factor, change to numeric
#SSC Data
# Load SSC data
fname.sed = "ssc_2014-17.csv" #updated ssc csv with the 02/2017 data
x.ssc = read.csv(fname.sed)
dates.ssc = strptime(x.ssc$Date,format="%m/%d/%Y, %I:%M:%S %p")
#plot Q timeseries with SSC
par(oma=c(2,2,2,2),mar = c(4, 4, 0, 2))
xlimits = c(as.POSIXct(as.POSIXct("2017-02-27 02:30:00 PST")),as.POSIXct("2017-02-28 12:00:00 PST"))
xtics = seq(xlimits[1],xlimits[2],by=3600*2)
xlabels = format(xtics,"%m-%d %H:%M")
plot(date.time, q.cms, type ="l", xlab = "", ylab = "Discharge (cms)", xaxt = "n",xlim=xlimits)
axis(side = 1, date.time,at=xtics,labels=xlabels,las=2)
par(new=T)
plot(dates.ssc,x.ssc$g.l,yaxt="n",xlim=xlimits,xlab="",ylab="",pch=20,cex=2)
axis(side=4)
mtext("SSC g/l",side = 4, line = 3)
###############################################################################################################
#find discharge at time that SSC was collected
#find time of SSC samples #sample1
ftime = date.time
#target.time = as.POSIXct("2017-02-27 14:00:00",format="%Y-%m-%d %H:%M:%S")  # date and time # of the SSC sample
target.index = which(as.Date(format(dates.ssc,"%Y-%m-%d"))==as.Date("2017-02-27"))
target.times = dates.ssc[target.index]
match.data = rep(NA,times=length(target.times))
for (e in 1:length(target.times)){
difftime = ftime-target.times[e]
index = which(abs(difftime)==min(abs(difftime))) #absolute min time diff is when sample was taken (0 is at same time)
match.data[e] = q.cms[index] #discharge at that time
#q.cms[(index-10):(index+10)]
}
#plot(match.data,x.ssc$g.l[target.index],pch=20)
###############################################################################################################
#Summary data for Table 3.1:
match.data #the discharge at time of SSC collection
ssc.date.time = target.times #the date.time of SSC collecction
ssc = x.ssc$g.l[target.index]
#EMC = sum(ssc*match.data)/sum(match.data)
storm = "Storm 10"
Event = "E1"
table.3.1.export = data.frame(cbind(as.character(ssc.date.time), ssc, match.data, Event))
names(table.3.1.export) <- c("Date", "SSC (g/L)", "Q (cms)", "Event")
###############################################################################################################
#Table 3.3 Caculations
#Volume weighted mean (VWM) = sum(C1*Q1, C2*Q2, Cn*Qn) / sum(Q1, Q2, Qn)
#Load = total q (m3) * VWM (g/L) * 1000L/1 m3 * 1e-6 tonne/g
#samples taken during E2 and E3, do not need E1 data for total.q.m3
q.df = data.frame(date.time=date.time,q.cms=q.cms)
SSC.df = data.frame(date.time=dates.ssc,SSC=x.ssc$g.l)
#total.q.m3 = total.q.obs.mm/1000*10230000 #convert to m, multiply by 10.23 km2 wtshd area or 10230000 m2
#load.g = VWM*total.q.m3*1000 #1000L = 1m3
#load.ton = load.g * 1e-6 #1 gram = 1e-6 ton
setwd('../EPA_Events_Report_TJ_LLCW_Scripts')
source("regression_models_SSC_vs_Q.R")
out.data = SSL.calc(Q=q.df,SSC=SSC.df)
out.data
date = obs.summary[,1]
event = obs.summary[,5] # Event number e.g. "E1"
date.event = paste(date, event, sep=" ")
table.3.3.export = data.frame(event.date= date.event, NSSC=out.data$NSSC,total.q.mm=out.data$Qmm, total.q.m3=out.data$Qm3, VWM=out.data$VWM, SSL.Event.VWM=out.data$SSL.VWM.event,SSL.All.VWM=out.data$SSL.VWM.all,SSL.Rating.no.bcf=out.data$SSL.rating.wo.bcf,SSL.Rating.bcf=out.data$SSL.rating.w.bcf)
table.3.3.export
setwd("G:/mydocuments/SDSU/research/tijuana_watershed/writeups/EPA_events_report/EPA_Events_Report_TJ_LLCW_Scripts")
getwd() #the directory where the script is saved
setwd('../EPA_Events_Report_TJ_LLCW_Data') #set working directory as the data folder, which is one folder back in it's own folder
script.dir= '../EPA_Events_Report_TJ_LLCW_Scripts/' #directory where scripts are saved
###############################################################################################################
#list all of the SSC scripts
flist2 = c("Figure_3.2_EventsReport_SSC_03012014.R",
"Figure_3.3_EventsReport_SSC_03012015.R",
"Figure_3.4_EventsReport_SSC_05152015.R",
"Figure_3.5_EventsReport_SSC_03062016.R",
"Figure_3.6_EventsReport_SSC_02172017.R",
"Figure_3.7_EventsReport_SSC_02272017.R")
###############################################################################################################
#Loop to run each R events script and pull out the appropriate tables: obs.summary.PT.IBWC and obs.summary
table.3.1.out = data.frame(matrix(nrow=1, ncol=4)) #empty dataframe to put the values in from obs.summary.PT.IBWC
names(table.3.1.out) <- c("Date", "SSC (g/L)", "Q (cms)", "Event")
table.3.3.out = data.frame(event.date= NA, NSSC=NA, total.q.mm=NA, total.q.m3=NA, VWM=NA, SSL.Event.VWM=NA,SSL.All.VWM=NA,SSL.Rating.no.bcf=NA,SSL.Rating.bcf=NA)
Storm.out = NA
for (i in 1:length(flist2)) {
source(paste(script.dir,flist2[i], sep = ""))
#append the obs.summary.PT.IBWC to the summary.out dataframe from each storm
table.3.1.out = rbind(table.3.1.out, table.3.1.export)
table.3.3.out = rbind(table.3.3.out, table.3.3.export) #only the usable data (A rating)
Storm.out = c(Storm.out, storm)
}
###############################################################################################################
#New summary tables
table.3.1.out$`Q (cms)`[table.3.1.out$`Q (cms)`<0.07] = 0.07
table.3.1 = table.3.1.out[2:length(table.3.1.out$Date),]
names(table.3.1) <- c("Date", "SSC (g/L)", "Q (cms)", "Event")
table.3.3 = table.3.3.out[2:length(table.3.3.out$event.date),]
Storm.out = Storm.out[2:length(Storm.out)]
table.3.3
fname.3.3 = "summary_table.3.3.csv"
write.csv(table.3.3 , file=fname.3.3, row.names=F)
table.3.3.ssc = read.csv("summary_table.3.3.csv") #table with both IBWC and PT data
table.3.3.ssc
table.3.3.ssc.df = data.frame(table.3.3.ssc)
table.3.3.ssc.df[,c("total.q.mm","VWM")] = round(table.3.3.ssc.df[,c("total.q.mm","VWM")],1) #round the numeric columns
table.3.3.ssc.df[,c("total.q.m3","SSL.Event.VWM","SSL.All.VWM","SSL.Rating.no.bcf","SSL.Rating.bcf")] = round(table.3.3.ssc.df[,c("total.q.m3","SSL.Event.VWM","SSL.All.VWM","SSL.Rating.no.bcf","SSL.Rating.bcf")],0)
names(table.3.3.ssc.df) <- c("Event Date*", "", "mm", "m3", "g/L", "Event VWM","All VWM","Rating, no bcf","Rating, bcf")
table.3.3.ssc.df
table.3.3.SSC.tableout = htmlTable(table.3.3.ssc.df,
rnames = rep("", times=length(table.3.3.ssc.df[,1])), #no row names
cgroup = c("Event Date*", "N SSC","Total Q","VWM", "Suspended sediment load"),
n.cgroup = c(1, 1, 2, 1,4),
caption="Table 3.3.  Total event suspended sediment load at the PT location for the events with SSC data. Drainage area is 10.23 km2 at the observation point.")
print.htmlTable(table.3.3.SSC.tableout)
#  Calculates SSL for three methods
SSL.calc = function(Q,SSC) { # Q = discharge time series for the event.  SSC = SSC samples for the event
Q.dates = as.Date(format(Q$date.time,"%Y-%m-%d"))
ftime = Q$date.time
target.index = which(as.Date(format(SSC$date.time,"%Y-%m-%d")) %in% Q.dates)
target.times = SSC$date.time[target.index]
SSCsub = SSC[target.index,]
match.data = rep(NA,times=length(target.times))
for (e in 1:length(target.times)){
difftime = ftime-target.times[e]
index = which(abs(difftime)==min(abs(difftime))) #absolute min time diff is when sample was taken (0 is at same time)
match.data[e] = Q$q.cms[index] #discharge at that time
#q.cms[(index-10):(index+10)]
}
#  Interpolate Q to 5 minute intervals
q.time.5min = seq.POSIXt(from=min(Q$date.time),to=max(Q$date.time),by=5*60)
q.5min = approx(Q$date.time,Q$q.cms,xout=q.time.5min)
total.q.m3 = sum(q.5min$y*5*60)
# 1.VWM for the event
VWM = sum(SSCsub$SSC*match.data)/sum(match.data)
#total.q.m3 = (total.q.obs.mm/1000)*10230000 #convert to m, multiply by 10.23 km2 wtshd area or 10230000 m2
load.ton.event.VWM = VWM*total.q.m3*1000/1E6 #1000L = 1m3, 1E6 g = 1 ton
# 2.EMC for all samples
all.samples = read.csv("summary_table.3.1.csv")
VWM.all = sum(all.samples$SSC..g.L.*all.samples$Q..cms.)/sum(all.samples$Q..cms.)
load.ton.all.VWM = VWM.all*total.q.m3*1000/1E6
# 3. Q-SSC rating curve, all samples
ssl.predict.wbcf.tons = 5*60*sum(SSL.a.w.bcf*q.5min$y^SSL.b)/1000  # Predicted SSL for all Q, kg/s.  Obtained from running "regression_models_SSC_vs_Q.r"
ssl.predict.wobcf.tons = 5*60*sum(SSL.a.wo.bcf*q.5min$y^SSL.b)/1000
out.df = data.frame(NSSC=length(SSCsub$SSC),Qm3=total.q.m3,Qmm=1000*total.q.m3/(10.23*1E6),VWM=VWM, SSL.VWM.event=load.ton.event.VWM,SSL.VWM.all=load.ton.all.VWM,SSL.rating.wo.bcf=ssl.predict.wobcf.tons,SSL.rating.w.bcf=ssl.predict.wbcf.tons)
return(out.df)
}
#To generate Table 3.1 and 3.3 in EPA Events Report
#Script written by Kris Taniguchi, SDSU (kristaniguchi@gmail.com)
#table generated from each SSC script, pull summary data from each script and put into table
#Set working directory to the data folder, script directory will be used if sourcing functions
setwd("G:/mydocuments/SDSU/research/tijuana_watershed/writeups/EPA_events_report/EPA_Events_Report_TJ_LLCW_Scripts")
getwd() #the directory where the script is saved
setwd('../EPA_Events_Report_TJ_LLCW_Data') #set working directory as the data folder, which is one folder back in it's own folder
script.dir= '../EPA_Events_Report_TJ_LLCW_Scripts/' #directory where scripts are saved
###############################################################################################################
#list all of the SSC scripts
flist2 = c("Figure_3.2_EventsReport_SSC_03012014.R",
"Figure_3.3_EventsReport_SSC_03012015.R",
"Figure_3.4_EventsReport_SSC_05152015.R",
"Figure_3.5_EventsReport_SSC_03062016.R",
"Figure_3.6_EventsReport_SSC_02172017.R",
"Figure_3.7_EventsReport_SSC_02272017.R")
###############################################################################################################
#Loop to run each R events script and pull out the appropriate tables: obs.summary.PT.IBWC and obs.summary
table.3.1.out = data.frame(matrix(nrow=1, ncol=4)) #empty dataframe to put the values in from obs.summary.PT.IBWC
names(table.3.1.out) <- c("Date", "SSC (g/L)", "Q (cms)", "Event")
table.3.3.out = data.frame(event.date= NA, NSSC=NA, total.q.mm=NA, total.q.m3=NA, VWM=NA, SSL.Event.VWM=NA,SSL.All.VWM=NA,SSL.Rating.no.bcf=NA,SSL.Rating.bcf=NA)
Storm.out = NA
for (i in 1:length(flist2)) {
source(paste(script.dir,flist2[i], sep = ""))
#append the obs.summary.PT.IBWC to the summary.out dataframe from each storm
table.3.1.out = rbind(table.3.1.out, table.3.1.export)
table.3.3.out = rbind(table.3.3.out, table.3.3.export) #only the usable data (A rating)
Storm.out = c(Storm.out, storm)
}
###############################################################################################################
#New summary tables
table.3.1.out$`Q (cms)`[table.3.1.out$`Q (cms)`<0.07] = 0.07
table.3.1 = table.3.1.out[2:length(table.3.1.out$Date),]
names(table.3.1) <- c("Date", "SSC (g/L)", "Q (cms)", "Event")
table.3.3 = table.3.3.out[2:length(table.3.3.out$event.date),]
Storm.out = Storm.out[2:length(Storm.out)]
###############################################################################################################
#Export new tables into .csv
fname.3.1 = "summary_table.3.1.csv"
write.csv(table.3.1, file=fname.3.1, row.names=F)
fname.3.3 = "summary_table.3.3.csv"
write.csv(table.3.3 , file=fname.3.3, row.names=F)
#To format the html table 3.1 in EPA Events Report
#Script written by Kris Taniguchi, SDSU (kristaniguchi@gmail.com)
#Table with SSC data summary
#Set working directory to the data folder, script directory will be used if sourcing functions
setwd("G:/mydocuments/SDSU/research/tijuana_watershed/writeups/EPA_events_report/EPA_Events_Report_TJ_LLCW_Scripts")
getwd() #the directory where the script is saved
source("print.htmlTable.R")
setwd('../EPA_Events_Report_TJ_LLCW_Data') #set working directory as the data folder, which is one folder back in it's own folder
###############################################################################################################
#Read in the tables generated from Table2.1_cal_generate.R and all of the events scripts
table.3.1.ssc = read.csv("summary_table.3.1.csv") #table with both IBWC and PT data
###############################################################################################################
#HTML Tables
library(htmlTable)
#Format html table for PT & IBWC data all
#Create dataframes, make sure all classes of numeric are set for rounding values
table.3.1.ssc.df = data.frame(table.3.1.ssc)
#Round the values
round1 = txtRound(table.3.1.ssc.df[,2:3],2) #round the numeric columns
table.3.1.final = data.frame(cbind(as.character(table.3.1.ssc.df[,1]), round1[,1], round1[,2]))
names(table.3.1.final) <- c("Date and Time", "SSC (g/L)", "Q (cms)")
#set the text columns as as.character
table.3.1.final[,1] <- as.character(table.3.1.ssc.df[,1])
table.3.1.final[,2] <- as.character(table.3.1.final[,2])
table.3.1.final[,3] <- as.character(table.3.1.final[,3])
#table.3.1.final[,4] <- as.character(table.3.1.ssc.df[,4])
table.3.1.SSC.tableout = htmlTable(table.3.1.final,
rnames = rep("", times=length(table.3.1.ssc.df[,1])), #no row names
header = c("Date", "SSC (g/L)", "Q (cms)"),
rgroup= c("Storm 1",  "Storm 2",  "Storm 3",  "Storm 6",  "Storm 9",  "Storm 10"),
n.rgroup=c(2,4,1,6,3,1),
caption="Table 3.1.  Suspended sediment concentration (SSC) for all collected samples.")
print.htmlTable(table.3.1.SSC.tableout)
#To format the html table 3.1 in EPA Events Report
#Script written by Kris Taniguchi, SDSU (kristaniguchi@gmail.com)
#Table with SSC data summary
#Set working directory to the data folder, script directory will be used if sourcing functions
getwd() #the directory where the script is saved
setwd('../EPA_Events_Report_TJ_LLCW_Data') #set working directory as the data folder, which is one folder back in it's own folder
###############################################################################################################
#Read in the tables generated from Table2.1_cal_generate.R and all of the events scripts
table.3.3.ssc = read.csv("summary_table.3.3.csv") #table with both IBWC and PT data
###############################################################################################################
#HTML Tables
library(htmlTable)
#Format html table for PT & IBWC data all
#Create dataframes, make sure all classes of numeric are set for rounding values
table.3.3.ssc.df = data.frame(table.3.3.ssc)
#Round the values
table.3.3.ssc.df[,c("total.q.mm","VWM")] = round(table.3.3.ssc.df[,c("total.q.mm","VWM")],1) #round the numeric columns
table.3.3.ssc.df[,c("total.q.m3","SSL.Event.VWM","SSL.All.VWM","SSL.Rating.no.bcf","SSL.Rating.bcf")] = round(table.3.3.ssc.df[,c("total.q.m3","SSL.Event.VWM","SSL.All.VWM","SSL.Rating.no.bcf","SSL.Rating.bcf")],0)
#load.round = signif(table.3.3.ssc.df[,4], 3)
names(table.3.3.ssc.df) <- c("Event Date*", "", "mm", "m3", "g/L", "Event VWM","All VWM","Rating, no bcf","Rating, bcf")
table.3.3.SSC.tableout = htmlTable(table.3.3.ssc.df,
rnames = rep("", times=length(table.3.3.ssc.df[,1])), #no row names
cgroup = c("Event Date*", "N SSC","Total Q","VWM", "Suspended sediment load"),
n.cgroup = c(1, 1, 2, 1,4),
caption="Table 3.3.  Total event suspended sediment load at the PT location for the events with SSC data. Drainage area is 10.23 km2 at the observation point.")
print.htmlTable(table.3.3.SSC.tableout)
print.htmlTable(table.3.3.SSC.tableout)
